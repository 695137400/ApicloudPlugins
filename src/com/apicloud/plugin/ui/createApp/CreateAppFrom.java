package com.apicloud.plugin.ui.createApp;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 * Created with IntelliJ IDEA.<br/>
 * User: <br/>
 * Date: 2018-9-30-0030<br/>
 * Time: 15:24:09<br/>
 * Author:<br/>
 * Description: <span style="color:#63D3E9"></span><br/>
 */
public class CreateAppFrom {


    public JPanel panel1;
    public JPanel kongPanel;
    public JPanel homePanel;
    public JPanel bottomPanel;
    public JPanel leftPanel;
    public JLabel kongLable;
    public JLabel homeLable;
    public JLabel bottomLable;
    public JLabel leftLable;
    public JLabel allLable;
    public JComboBox myExecutablePathField;

    public CreateAppFrom() {
        kongPanel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                super.mousePressed(e);
                myExecutablePathField.setSelectedItem("default");
                kongLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/4-1.png")));
                bottomLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/1.png")));
                homeLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/2.png")));
                leftLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/3.png")));
                allLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/4-1-1.png")));
            }
        });
        homePanel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                super.mouseClicked(e);
                myExecutablePathField.setSelectedItem("home");
                kongLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/4.png")));
                bottomLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/1.png")));
                homeLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/2-1.png")));
                leftLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/3.png")));
                allLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/2-1-1.png")));
            }
        });
        bottomPanel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                super.mousePressed(e);
                myExecutablePathField.setSelectedItem("bottom");
                kongLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/4.png")));
                bottomLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/1-1.png")));
                homeLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/2.png")));
                leftLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/3.png")));
                allLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/1-1-1.png")));
            }
        });
        leftPanel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                super.mousePressed(e);
                myExecutablePathField.setSelectedItem("slide");
                kongLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/4.png")));
                bottomLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/1.png")));
                homeLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/2.png")));
                leftLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/3-1.png")));
                allLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/3-1-1.png")));
            }
        });
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("CreateAppFrom");
        frame.setContentPane(new CreateAppFrom().panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        kongPanel = new JPanel();
        kongPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 10, 0, 10), -1, -1));
        panel2.add(kongPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        kongLable = new JLabel();
        kongLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/4-1.png")));
        kongLable.setText("");
        kongPanel.add(kongLable, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("空白应用");
        kongPanel.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        homePanel = new JPanel();
        homePanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 10, 0, 10), -1, -1));
        panel2.add(homePanel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        homeLable = new JLabel();
        homeLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/2.png")));
        homeLable.setText("");
        homePanel.add(homeLable, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("首页导航");
        homePanel.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bottomPanel = new JPanel();
        bottomPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 10, 0, 10), -1, -1));
        panel2.add(bottomPanel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        bottomLable = new JLabel();
        bottomLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/1.png")));
        bottomLable.setText("");
        bottomPanel.add(bottomLable, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("底部导航");
        bottomPanel.add(label3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        leftPanel = new JPanel();
        leftPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 10, 0, 10), -1, -1));
        panel2.add(leftPanel, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        leftLable = new JLabel();
        leftLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/3.png")));
        leftLable.setText("");
        leftPanel.add(leftLable, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("侧边导航");
        leftPanel.add(label4, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel1.add(spacer2, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        panel1.add(spacer3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 1, new Insets(20, 0, 20, 0), -1, -1));
        panel1.add(panel3, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        allLable = new JLabel();
        allLable.setIcon(new ImageIcon(getClass().getResource("/com/apicloud/plugin/icons/4-1-1.png")));
        allLable.setText("");
        panel3.add(allLable, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
